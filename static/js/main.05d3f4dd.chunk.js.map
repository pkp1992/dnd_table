{"version":3,"sources":["data.js","Types/ItemTypes.js","Row/Row.js","Row/index.js","Spinner/index.js","Spinner/Spinner.js","Table/index.js","Table/Table.js","Popup/index.js","Popup/Popup.js","App.js","serviceWorker.js","index.js"],"names":["id","taskName","create","manager","Date","style","backgroundColor","cursor","Row","item","selectedItem","index","moveCard","ref","useRef","useDrop","accept","ItemTypes","hover","monitor","current","dragIndex","hoverIndex","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","hoverClientY","getClientOffset","y","drop","useDrag","type","collect","isDragging","opacity","drag","onDoubleClick","moment","format","Spinner","className","role","Table","data","map","el","key","renderRow","Popup","modalOpenFlage","useState","show","setShow","handleClose","useEffect","Modal","onHide","Header","closeButton","Title","Body","Footer","Button","variant","onClick","App","loadingData","selectItem","setOpenFlage","useCallback","dragCard","update","$splice","setTimeout","Data","DndProvider","backend","Backend","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.05d3f4dd.chunk.js","sourcesContent":["export default [\n  {\n    id: 25,\n    taskName: \"Make Loader\",\n    create: 0,\n    manager: \"Alex\"\n  },\n  {\n    id: 74,\n    taskName: \"Get Table\",\n    create: 412939359987,\n    manager: \"Mike\"\n  },\n  {\n    id: 12,\n    taskName: \"Some do\",\n    create: 9149393399987,\n    manager: \"Alex\"\n  },\n  {\n    id: 11,\n    taskName: \"Add DnD\",\n    create: 9329393399987,\n    manager: \"Dave\"\n  },\n  {\n    id: 17,\n    taskName: \"Task Name\",\n    create: 912936799987,\n    manager: \"Fill\"\n  },\n  {\n    id: 33,\n    taskName: \"Task Name\",\n    create: 9179393379987,\n    manager: \"Mike\"\n  },\n  {\n    id: 77,\n    taskName: \"Task Name\",\n    create: 916939349987,\n    manager: \"Mike\"\n  },\n  {\n    id: 1,\n    taskName: \"Task Name\",\n    create: 9139393399987,\n    manager: \"Mike\"\n  },\n  {\n    id: 8,\n    taskName: \"Task Name\",\n    create: 9124393399987,\n    manager: \"Mike\"\n  },\n  {\n    id: 21,\n    taskName: \"Task Name\",\n    create: 9129333399987,\n    manager: \"Mike\"\n  },\n  {\n    id: 33,\n    taskName: \"Task Name\",\n    create: 9129395599987,\n    manager: \"Mike\"\n  },\n  {\n    id: 38,\n    taskName: \"Task Name\",\n    create: 9129344399987,\n    manager: \"Mike\"\n  },\n  {\n    id: 16,\n    taskName: \"Task Name\",\n    create: 9129392299983,\n    manager: \"Mike\"\n  },\n  {\n    id: 30,\n    taskName: \"Task Name\",\n    create: 912545399987,\n    manager: \"Mike\"\n  },\n  {\n    id: 50,\n    taskName: \"Task Name\",\n    create: new Date(),\n    manager: \"Mike\"\n  },\n  {\n    id: 20,\n    taskName: \"Task Name\",\n    create: 4429393399987,\n    manager: \"Mike\"\n  },\n  {\n    id: 40,\n    taskName: \"Task Name\",\n    create: 9129354399987,\n    manager: \"Mike\"\n  },\n  {\n    id: 60,\n    taskName: \"Task Name\",\n    create: 9129396799987,\n    manager: \"Mike\"\n  },\n  {\n    id: 55,\n    taskName: \"Task Name\",\n    create: 9124396799987,\n    manager: \"Mike\"\n  },\n  {\n    id: 44,\n    taskName: \"Task Name\",\n    create: 9129397699987,\n    manager: \"Mike\"\n  },\n  {\n    id: 66,\n    taskName: \"Task Name\",\n    create: 9129396765987,\n    manager: \"Mike\"\n  },\n  {\n    id: 70,\n    taskName: \"Task Name\",\n    create: 9129396765987,\n    manager: \"Mike\"\n  },\n  {\n    id: 45,\n    taskName: \"Task Name\",\n    create: 9129396765987,\n    manager: \"Mike\"\n  },\n  {\n    id: 54,\n    taskName: \"Task Name\",\n    create: 9129396765987,\n    manager: \"Mike\"\n  },\n  {\n    id: 51,\n    taskName: \"Task Name\",\n    create: 9129396765987,\n    manager: \"Mike\"\n  }\n];\n","export default {\n  CARD: \"card\"\n};\n","import React, { useRef } from \"react\";\nimport moment from \"moment\";\nimport { useDrag, useDrop } from \"react-dnd\";\nimport ItemTypes from \"../Types/ItemTypes\";\nconst style = {\n  backgroundColor: \"#fff\",\n  cursor: \"pointer\"\n};\n\nexport default ({ item, selectedItem, index, moveCard }) => {\n  const { taskName, create, manager, id } = item;\n  const ref = useRef(null);\n\n  const [, drop] = useDrop({\n    accept: ItemTypes.CARD,\n    hover(item, monitor) {\n      if (!ref.current) {\n        return;\n      }\n      const dragIndex = item.index;\n      const hoverIndex = index;\n      if (dragIndex === hoverIndex) {\n        return;\n      }\n      const hoverBoundingRect = ref.current.getBoundingClientRect();\n      const hoverMiddleY =\n        (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\n      const clientOffset = monitor.getClientOffset();\n      const hoverClientY = clientOffset.y - hoverBoundingRect.top;\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n        return;\n      }\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n        return;\n      }\n      moveCard(dragIndex, hoverIndex);\n      item.index = hoverIndex;\n    }\n  });\n\n  const [{ isDragging }, drag] = useDrag({\n    item: { type: ItemTypes.CARD, id, index },\n\n    collect: monitor => ({\n      isDragging: monitor.isDragging()\n    })\n  });\n  const opacity = isDragging ? 0.1 : 1;\n\n  drag(drop(ref));\n\n  return (\n    <tr\n      onDoubleClick={() => selectedItem(id)}\n      ref={ref}\n      style={{ ...style, opacity }}\n    >\n      <th>{id}</th>\n      <td>{taskName}</td>\n      <td>{moment(create).format(\"Do MMMM YYYY HH:MM\")}</td>\n      <td>{manager}</td>\n      <td>{index + 1}</td>\n    </tr>\n  );\n};\n","import Row from \"./Row\";\nexport default Row","import Spinner from './Spinner'\nexport default Spinner;","import React from \"react\";\n\nexport default () => (\n  <tbody className=\"text-center\">\n    <tr>\n      <th></th>\n      <th></th>\n      <th>\n        <span className=\"spinner-border\" role=\"status\"></span>\n      </th>\n      <th></th>\n      <th></th>\n    </tr>\n  </tbody>\n);\n","import Table from \"./Table\";\nexport default Table;\n","import React from \"react\";\nimport Row from \"../Row\";\nimport Spinner from \"../Spinner\";\nimport \"./table.css\";\n\nexport default ({ data, selectedItem, moveCard }) => {\n  const renderRow = (item, index) => {\n    return (\n      <Row\n        key={index}\n        index={index}\n        item={item}\n        selectedItem={() => selectedItem(item)}\n        moveCard={moveCard}\n      />\n    );\n  };\n\n  return (\n    <table className=\"table table-responsive-md\">\n      <thead className=\"thead-dark\">\n        <tr>\n          <th>ID</th>\n          <th>Task name</th>\n          <th>Create</th>\n          <th>Manager</th>\n          <th>Priority</th>\n        </tr>\n      </thead>\n      {!data ? (\n        <Spinner />\n      ) : (\n        <tbody>{data.map((el, index) => renderRow(el, index))}</tbody>\n      )}\n    </table>\n  );\n};\n","import Popup from './Popup'\nexport default Popup","import React, { useState, useEffect } from \"react\";\nimport moment from \"moment\";\nimport { Button, Modal } from \"react-bootstrap\";\n\nexport default ({ item, modalOpenFlage }) => {\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  useEffect(() => {\n    if (item) {\n      handleShow();\n    }\n  }, [item, modalOpenFlage]);\n\n  if (item) {\n    const { taskName, create, manager, id } = item;\n    return (\n      <>\n        <Modal show={show} onHide={handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Card</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <div>ID: {id}</div>\n            <div>Task: {taskName}</div>\n            <div>\n              Create Date: {moment(create).format(\"Do MMMM YYYY HH:MM\")}\n            </div>\n            <div>Manager: {manager}</div>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"primary\" onClick={handleClose}>\n              Close\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n  }\n\n  return null;\n};\n","import React, { useState, useCallback } from \"react\";\nimport { DndProvider } from \"react-dnd\";\nimport Backend from \"react-dnd-html5-backend\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport update from \"immutability-helper\";\n\nimport Data from \"./data\";\nimport Table from \"./Table\";\nimport Popup from \"./Popup\";\n\nconst App = () => {\n  const [data, loadingData] = useState(null);\n  const [item, selectItem] = useState(null);\n  const [modalOpenFlage, setOpenFlage] = useState(\"close\");\n\n  const moveCard = useCallback(\n    (dragIndex, hoverIndex) => {\n      const dragCard = data[dragIndex];\n      loadingData(\n        update(data, {\n          $splice: [\n            [dragIndex, 1],\n            [hoverIndex, 0, dragCard]\n          ]\n        })\n      );\n    },\n    [data]\n  );\n\n  if (data === null) {\n    setTimeout(() => {\n      loadingData((Data));\n    }, 2000);\n  }\n\n  const selectedItem = item => {\n    selectItem(item);\n    let modalFlag = modalOpenFlage === \"close\" ? \"open\" : \"close\";\n    setOpenFlage(modalFlag);\n  };\n\n  return (\n    <div className=\"container table-container\">\n      <DndProvider backend={Backend}>\n        <Table\n          data={data}\n          selectedItem={selectedItem}\n          moveCard={moveCard}\n        />\n        <Popup item={item} modalOpenFlage={modalOpenFlage} />\n      </DndProvider>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}